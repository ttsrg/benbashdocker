---
- name: Check if Docker is installed
  command: systemctl status docker
  register: docker_check
  ignore_errors: yes
  changed_when: False

- name: Add docker repo
  yum_repository:
    name: docker
    description: docker stable
#    baseurl: https://download.docker.com/{{ ansible_system|lower }}/{{ ansible_distribution|lower }}/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/stable
#    gpgkey: https://download.docker.com/{{ ansible_system|lower }}/{{ ansible_distribution|lower }}/gpg
    baseurl: https://download.docker.com/linux/centos/7/x86_64/stable
    gpgkey: https://download.docker.com/linux/centos/gpg
    gpgcheck: yes
  become: yes
  when: docker_check.stderr.find('service could not be found') != -1

- name: Enable Docker Edge repo
  ini_file:
    dest: /etc/yum.repos.d/docer-ce.repo
    section: 'docker-ce-edge'
    option: enabled
    value: '0'
  become: yes
  when: docker_check.stderr.find('service could not be found') != -1

- name: Configuring docker.conf
  blockinfile:
    path: /etc/sysctl.d/docker.conf
    block: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
    create: True
  become: yes

- name: Sysctl --system
  command: sysctl --system
  changed_when: False
  become: yes

- name: Install Docker-ce and python-pip
  package:
    name:
      - docker-ce
      - python-pip
    state: present
  when: docker_check.stderr.find('service could not be found') != -1
  become: yes

- name: install lib docker-py
  pip:
    name: docker-py
  become: yes    


- name: Start Docker service
  service:
    name: docker
    state: started
    enabled: yes
  when: docker_check.stderr.find('service could not be found') != -1
  become: yes
  
#- name: get version
#  shell: docker -v| awk '{print $3}'|cut -f1 -d ','
#  register: version
#  notify: docker_facts

- name: Add user  to docker group
  user:
    name: devops
    groups: docker
    append: yes
  become: yes


- name: Add google cloud user   to docker group
  user:
    name: ttserg
    groups: docker
    append: yes
  become: yes
  
#- name: restart Docker service
#  service:
#    name: docker
#    state: restarted
#  become: yes
#  changed_when: False
                    
- name: set selinux to permissive
  selinux:
#    policy: targeted
    state: disabled
  become: yes